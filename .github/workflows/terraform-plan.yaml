name: Terraform-Plan

on:
  push:
    branches:
      - main

  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run against'
        type: string
        default: 'dev'
        required: true
      working_directory:
        type: string
        required: true
      terraform_version:
        type: string
        required: false
        default: '1.5.7'
      suffix:
        type: string
        required: false
        default: ''

env:
  TERRAFORM_WORKING_DIRECTORY: "infra/aks-deploy"
  APPLICATION_NAME: "aks-deploy"
  ENVIRONMENT_NAME: "dev"

jobs:

  plan:
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}

    steps:
    - uses: actions/checkout@v3

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - id: plan
      name: Terraform Plan
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        TF_VAR_application_name: ${{ env.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ env.ENVIRONMENT_NAME }}
      working-directory: ${{ env.TERRAFORM_WORKING_DIRECTORY }}
      run: |

        pwd
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_CONTAINER_NAME }}" \
          -backend-config="key=${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT_NAME }}${{ inputs.suffix }}"

        terraform plan